{"version":3,"sources":["components/FriendList/FriendList.module.css","components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","userData","className","s","profile__item","src","avatar","alt","name","tag","location","stats","quantity","followers","views","likes","Statistics","title","style","statistics","stat__list","map","user","key","id","user__el","label","percentage","defaultProps","FriendListItem","isOnline","item__div","span","disabled","width","FriendList","friends","friend_list","length","el","item","TransactionHistory","items","transaction_history","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d220ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__1XTLl\",\"span\":\"FriendList_span__3kNoV\",\"item\":\"FriendList_item__-lYix\",\"avatar\":\"FriendList_avatar__2fiZr\",\"item__div\":\"FriendList_item__div__3SR10\",\"disabled\":\"FriendList_disabled__3RCtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__item\":\"Profile_profile__item__1_7ku\",\"stats\":\"Profile_stats__25zJx\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"stat__list\":\"Statistics_stat__list__3ox6s\",\"user__el\":\"Statistics_user__el__2pdXd\",\"title\":\"Statistics_title__3PVIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__3vdfz\",\"item\":\"TransactionHistory_item__1zzdM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nconst Profile = ({ userData }) => (\n  <div className={s.profile__item}>\n    <div className=\"description\">\n      <img src={userData.avatar} alt=\"user avatar\" className={s.avatar} />\n      <p className={s.name}>{userData.name}</p>\n      <p className=\"tag\">{userData.tag}</p>\n      <p className=\"location\">{userData.location}</p>\n    </div>\n\n    <ul className={s.stats}>\n      <li>\n        <span className=\"label\">Followers </span>\n        <span className={s.quantity}>{userData.stats.followers}</span>\n      </li>\n      <li>\n        <span className=\"label\">Views </span>\n        <span className={s.quantity}>{userData.stats.views}</span>\n      </li>\n      <li>\n        <span className=\"label\">Likes </span>\n        <span className={s.quantity}>{userData.stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  userData: PropTypes.shape({\n    name: PropTypes.string,\n    tag: PropTypes.string,\n    location: PropTypes.string,\n    stats: PropTypes.shape({\n      followers: PropTypes.number,\n      views: PropTypes.number,\n      likes: PropTypes.number,\n    }),\n    avatar: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\n// import statisticalData from '../utils/statistical-data.json';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={style.statistics}>\n    <h2 className={style.title}>{title}</h2>\n\n    <ul className={style.stat__list}>\n      {stats.map(user => (\n        <li key={user.id} className={style.user__el}>\n          <span className=\"label\">{user.label}</span>\n          <span className=\"percentage\">{user.percentage} %</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: 'UPLOAD STATS',\n};\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n  title: PropTypes.string,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nconst FriendListItem = ({ isOnline, avatar, name }) => (\n  <div className={s.item__div}>\n    <span className={isOnline ? s.span : s.disabled} />\n    <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n    <p className=\"name\">{name}</p>\n  </div>\n);\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends = [] }) => (\n  <ul className={s.friend_list}>\n    {friends.length &&\n      friends.map(el => (\n        <li key={el.id} className={s.item}>\n          <FriendListItem\n            isOnline={el.isOnline}\n            avatar={el.avatar}\n            name={el.name}\n          />\n        </li>\n      ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={s.transaction_history}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id} id={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport user from './components/utils/user.json';\nimport statisticalData from './components/utils/statistical-data.json';\nimport FriendsList from './components/FriendList/FriendList';\nimport friends from './components/utils/friends.json';\nimport transactions from './components/utils/transactions.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nconst App = () => (\n  <div>\n    <Profile userData={user} />,\n    <Statistics stats={statisticalData} />,\n    <FriendsList friends={friends} />,\n    <TransactionHistory items={transactions} />,\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}